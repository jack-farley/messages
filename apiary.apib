FORMAT: 1A
HOST: http://localhost:8000/

# Messages

Messages is a simple API allowing users to send and receive messages.

# Group Authentication

## Signup [/accounts/signup/]


### Create an Account [POST]

Provide a username and password to signup for an account. Other user
information can be provided or changed later.

+ Request (application/json)
    
        {
            "username": <username>,
            "password1": <password>,
            "password2": <password>
        }

+ Response 201 (application/json)

    + Body
    
            {
                "id": <user_id>,
                "username": <username>,
                "first_name": <first name>,
                "last_name": <last name>
            }

+ Response 400 (application/json)

        Returned if the specified username is already taken, the passwords 
        do not match, or fields are blank or missing.
        
    + Body


## Login [/accounts/login/]


### Login to account [POST]

You must provide your username and pasword. In exchange you will receive
access token, which expires every 5 minutes, and a refresh token, which
expires every 24 hours.

+ Request (application/json)

        {
            "username": <username>,
            "password": <password>
        }

+ Response 200 (application/json)

    + Body

            {
                "refresh": <refresh token>,
                "access": <access token>
            }
            
+ Response 401 (application/json)

        Returned if the username or password is incorrect.
        
    + Body
 
+ Response 400 (application/json)

        Returned if fields are blank or missing.
        
    + Body


## Refresh Token [/accounts/token/refresh/]


### Get a new access token [POST]

Use the refresh token from login to get a new access token.

+ Request (application/json)

    + Body
    
            refresh: <refresh token>
            
+ Response 200 (application/json)

    + Body

            {
                "access": <access token>
            }
            
+ Response 400 (application/json)

        Returned the refresh token field is missing or blank.

    + Body
  
+ Response 401 (application/json)

        Returned when the provided refresh token is invalid or expired.
        
    + Body


# Group Users

## Profiles [/{username}/]


### Get a user's profile [GET]

Get information about a user's profile.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>

+ Response 200 (application/json)

    + Body
        
            {
                "username": <username>,
                "first_name": <first name>,
                "last_name": <last name>
            }
            
+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the provided username.
        
    + Body


### Update a user's profile [PATCH]

Update information about a users profile. Note that only an
authenticated user can change information about their own profile.ng

+ Request (application/json)

    Request should include in the body the fields to be updated and
    their new values. If read-only fields are specified they will
    not be changed.

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
    
            {
                "first_name": <Updated first name>,
                "last_name": <Updated last name>
            }
            
+ Response 200 (application/json)

    + Body

            {
                "username": <username>,
                "first_name": <first name>,
                "last_name": <last name>
            }

+ Response 400 (application/json)
    
        Returned if a required field is blank.
        
    + Body

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if a user tries to update an account that is not their
        own, i.e. the authentication credentials do not match the account
        being updated.
        
    + Body

+ Response 404
    
        Returned if a user does not exist with the provided username.
        
    + Body

    
## Friends [/{username}/friends/]


### Get a user's friends [GET]

Get a list of a user's friends

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>

+ Response 200 (application/json)

    + Body

            [
                {
                    "username": <username>,
                    "first_name": <first name>,
                    "last_name": <last name>.
                    ...
                },
                <SERIALIZED PROFILE>,
                ...
            ]

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the provided username.
        
    + Body


### Send a friend request [POST]

Sends a friend request to the user specified in the request body.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
    
            {
                "username": username
            }

+ Response 200 (application/json)

    + Body
        
            {
                "created": <date-time>,
                "from_user": <username>,
                "to_user": <username>,
                "status": <pending/accepted/rejected/canceled>
            }

+ Response 400 (application/json)

        Returned if the two users are already friends or if there already
        exists a pending friend request betweeen the two users, in either
        direction. Also returned if required fields were missing.

    + Body

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if the authentication credentials do not match the user
        sending the friend request.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the username provided for 
        either the sender or receiver.
        
    + Body


### Remove a friend [DELETE]

Remove a user from the spcified user's friends list.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
    
            {
                "username": <username>
            }

+ Response 204

        Returned if the user is succesfully removed as a friend.
    
    + Body

+ Response 400 (application/json)

        Returned if the two users were not friends, or if required fields
        were empty or missing.

    + Body
    
+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if the authentication credentials do not match the user
        who would be removing a friend.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the provided username.
        
    + Body


## Requests [/{username}/requests/]


### Get a user's friend requests [GET]

Gets the the user's pending friend requests. Returns incoming friend requests 
if "outgoing" field is omitted or false, and outgoing requests otherwise.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
            
            {
                "outgoing": <True/False>
            }

+ Response 200 (application/json)

    + Body
        
            [
                {
                    "created": <date-time>,
                    "from_user": <username>,
                    "to_user": <username>,
                    "status": <pending/accepted/rejected/canceled>
                },
                <SERIALIZED REQUEST>,
                ...
            ]

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if the authentication credentials do not match the user
        whose friend requests are being requested.
        
    + Body
            
+ Response 404 (application/json)

        Returned either specified user does not exist.
        
    + Body


### Respond to a friend request [POST]

Accept or reject an incoming friend request from the user specified
in the request body.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
    
            {
                "username": <username>,
                "accepted": <True/False>
            }
            
+ Response 200 (application/json)

    + Body

            {
                "created": <date-time>,
                "from_user": <username>,
                "to_user": <username>,
                "status": <pending/accepted/rejected/canceled>
            }

+ Response 400 (application/json)

        Returned if required fields are missing or blank, or if there does
        not exist a pending friend request from the user specified in the
        request body to the user specified in the url.

    + Body

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if the authentication credentials do not match the user
        responding to the request.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the username provided for 
        either the sender or receiver.
        
    + Body


### Cancel a friend request [DELETE]

Cancel an outgoing friend request to the user specified in the request body.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer <access token>
            
    + Body
    
            {
                "username": <username>
            }

+ Response 200 (application/json)

    + Body

            {
                "created": <date-time>,
                "from_user": <username>,
                "to_user": <username>,
                "status": <pending/accepted/rejected/canceled>
            }

+ Response 400 (application/json)

        Returned if required fields are missing or blank, or if there does
        not exist a pending friend request from the user specified in the
        url to the user specified in the request body.

    + Body

+ Response 401 (application/json)

        Returned if authentication credentials were not provided or if the
        given token was invalid or expired.
        
    + Body

+ Response 403 (application/json)

        Returned if the authentication credentials do not match the user
        canceling the request.
        
    + Body

+ Response 404 (application/json)

        Returned if a user does not exist with the username provided for 
        either the sender or receiver.
        
    + Body